## vim:set ft=mako:
<%!
from bauble.plugins.report import get_plants_pertinent_to
from polylabel import polylabel
%>\
<?xml version="1.0" encoding="UTF-8"?>
<kml
  xmlns="http://www.opengis.net/kml/2.2"
  xmlns:gx="http://www.google.com/kml/ext/2.2"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
  http://www.opengis.net/kml/2.2
  http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd
  http://www.google.com/kml/ext/2.2
  http://code.google.com/apis/kml/schema/kml22gx.xsd
  "
  >
  <Document id="BBG_Plants">
  <name>BBG plants</name>
    <LookAt>
      <longitude>152.9741983906</longitude>
      <latitude>-27.47773119534686</latitude>
      <altitude>0</altitude>
      <heading>0</heading>
      <tilt>0</tilt>
      <range>1150</range>
      <gx:altitudeMode>relativeToSeaFloor</gx:altitudeMode>
    </LookAt>
    <snippet/>
    <description><![CDATA[]]></description>
% for plt in get_plants_pertinent_to(values):
<%
def json_to_kml_point(coords):
    return ','.join(str(i) for i in coords + [0])

def json_to_kml_line(coords):
    return ' '.join(json_to_kml_point(i) for i in coords)

def json_to_kml_poly(coords):
    return ' '.join(json_to_kml_point(i) for i in coords[0])

geo_point = geo_line = geo_shape = None
if plt.geojson:
    if plt.geojson.get('type') == 'Point':
        geo_point = json_to_kml_point(plt.geojson.get('coordinates'))
    elif plt.geojson.get('type') == 'LineString':
        geo_line = json_to_kml_line(plt.geojson.get('coordinates'))
        geo_points = geo_line.split()
    elif plt.geojson.get('type') == 'Polygon':
        plygn = plt.geojson.get('coordinates')
        geo_shape = json_to_kml_poly(plygn)
        coords = polylabel(plygn, precision=0.01)
        ## add an extra space so that we can replace the last alititude value with a height below (',0 ')
        geo_shape = geo_shape + ' '
%>
## would be good to add markers at line junctions and centers of shapes to make everything more uniform
% if geo_point or geo_line or geo_shape:
      <Placemark id="ID_${"%05d" % plt.id}">
        <name>${plt.accession.species_str()}</name>
        <snippet/>
        <description>
        <![CDATA[
        <p><small>ACCESSION: ${plt}</small></p>
        <p><small>QUANTITY: ${plt.quantity}</small></p>
        <p><small>COMMON: ${plt.accession.species.default_vernacular_name or ''}</small></p>
        <p><small>DISTRIBUTION: ${plt.accession.species.label_distribution or ''}</small></p>
        <p><small>FAMILY: ${plt.accession.species.genus.family}</small></p>
        <p>BED: ${plt.location.code} ${plt.location.name or ''}</p>
        ]]>
        </description>
        % if geo_point:
        <styleUrl>#IconStyle10</styleUrl>
        <Point>
          <extrude>1</extrude>
          <altitudeMode>clampToGround</altitudeMode>
          <coordinates>
            ${geo_point}
          </coordinates>
        </Point>
        % elif geo_line:
        <styleUrl>#LineStyle20</styleUrl>
        <MultiGeometry>
        % for point in geo_points:
          <Point>
            <coordinates>
              ${point}
            </coordinates>
          </Point>
        % endfor
          <LineString>
            <extrude>1</extrude>
            <altitudeMode>relativeToGround</altitudeMode>
            <coordinates>
              ${geo_line}
            </coordinates>
          </LineString>
        </MultiGeometry>
        % elif geo_shape:
        <styleUrl>#PolyStyle00</styleUrl>
        <MultiGeometry>
          <Point>
            <coordinates>
              ${coords[0]},${coords[1]},0
            </coordinates>
          </Point>
          <Polygon>
            <extrude>1</extrude>
            <altitudeMode>relativeToGround</altitudeMode>
            <outerBoundaryIs>
              <LinearRing>
                <coordinates>
                ## using relativeToGround with a minimal altitude gets rid of shading issues (zooming in/out with nearmap or osm overlays)
                  ${geo_shape.replace(',0 ', ',0.2 ')}
                </coordinates>
              </LinearRing>
            </outerBoundaryIs>
          </Polygon>
        </MultiGeometry>
        % endif
      </Placemark>
% endif
% endfor
      <Style id="PolyStyle00">
        <IconStyle>
        ## Hide the pushpin, works in Google Earth but not AGOL
          <scale>0</scale>
        </IconStyle>
        <IconStyle>
          <scale>1.000000</scale>
          <Icon>
            <href>
              http://maps.google.com/mapfiles/ms/micons/green.png
            </href>
          </Icon>
        </IconStyle>
        <LabelStyle>
          <color>ff0075d5</color>
          <colorMode>normal</colorMode>
          <scale>0.800000</scale>
        </LabelStyle>
        <LineStyle>
          <color>ff00ff00</color>
          <width>2.000000</width>
        </LineStyle>
        <PolyStyle>
          <color>5000ff00</color>
          <outline>1</outline>
        </PolyStyle>
      </Style>
      <Style id="IconStyle10">
        <IconStyle>
          <scale>1.000000</scale>
          <Icon>
            <href>
              http://maps.google.com/mapfiles/ms/micons/green.png
            </href>
          </Icon>
        </IconStyle>
        <LabelStyle>
          <color>ff0075d5</color>
          <colorMode>normal</colorMode>
          <scale>0.800000</scale>
        </LabelStyle>
      </Style>
      <Style id="LineStyle20">
        <IconStyle>
          <scale>1.000000</scale>
          <Icon>
            <href>
              http://maps.google.com/mapfiles/ms/micons/green.png
            </href>
          </Icon>
        </IconStyle>
        <LabelStyle>
          <color>ff0075d5</color>
          <colorMode>normal</colorMode>
          <scale>0.800000</scale>
        </LabelStyle>
        <LineStyle>
          <color>ff00a838</color>
          <width>2.000000</width>
        </LineStyle>
      </Style>
  </Document>
</kml>
